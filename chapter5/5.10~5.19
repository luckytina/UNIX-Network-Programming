5.10 wait和waitpid函数
1）概述
wait函数原型为pid_t wait(int *status);
当进程退出时，它向父进程发送SIGCHLD信号，默认情况下总是忽略SIGCHLD信号，此时进程状态一直保留在内存中，直到有父进程
使用wait函数来收集状态信息，才会清空这些信息。
用wait来等待一个子进程终止运行过程称为回收进程
当父进程忘了用wait()函数等待已终止的子进程时，子进程就会进入一种没有父进程状态，称为僵尸进程
wait()要与fork()配套出现
2）僵尸进程的形成
如文件zombie.c文件中没有使用wait()函数
zombie.c文件中使用wait()函数来终止子进程

5.11 accept返回前连接终止
类似于前一节的被中断系统调用的例子，另有一种情形也能导致accept返回一个非致命错误，这种情况下，只需要再次调用
accept。
这里，三路握手完成从而建立连接之后，客户TCP却发送一个RST。在服务器端看来，就在该连接已由TCP排队，等着服务器
进程调用accept的时候RST到达。稍后，服务器进程调用accept。

5.12 服务器进程终止

5.13 SIGPIPE信号

5.14 服务器主机崩溃

5.15 服务器主机崩溃后重启

5.16 服务器主机关机

5.17 TCP程序例子小结

5.18 数据格式

5.19 小结

