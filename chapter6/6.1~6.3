6.1概述
I/O复用：进程需要一种预先告知内核的能力，使得内核一旦发现进程指定的一个或
多个I/O条件就绪，它就通知进程。它是由select函数和poll函数来支持的
I/O复用用于一下场合
（1）当客户处理多个描述符时（通常是交互式输入和网络套接字），必须使用I/O复用。
（2）一个客户同时处理多个套接字是有可能的，不过比较少见。
（3）如果一个TCP服务器即要处理监听套接字，又要处理已连接的套接字，一般要用I/O复用
（4）如果一个服务器即要处理TCP，又要处理UDP，一般用I/O复用。
（5）如果一个服务器要处理多个服务或者多个协议一般也要用I/O复用。

6.2 I/O模型
对于套接字上的输入操作通常涉及两步。第一步通常涉及等待数据从网络中到达。当等待的分组到达，
它被复制到内核中的一个缓冲区。第二步就是把数据从内核缓冲区复制到应用进行相应的进行缓冲区
6.2.1 阻塞式I/O模型
最流行的I/O模型是阻塞I/O模型，前面所用的模型都是阻塞式I/O模型。默认情况下，所有套接字都是
阻塞的。在进程调用读得时候，其系统调用直到数据到达且被复制到应用进程的缓冲区或者发生错误
时才返回。我们进程从开始调用到最后的返回都是阻塞的。
6.2.2 非阻塞式I/O模型
6.2.3 I/O复用模型
有了I/O复用模型，我们就可以调用select和poll了，阻塞在这两个系统调用之上而不是阻塞在真正的
I/O复用模型。
我们阻塞于select调用，等待数据报套接字变为可读。当select返回套接字可读这一条件时，我们就可以把
所读数据报复制到应用程序的缓冲区了。
事实上I/O复用并不显得有什么优势，事实上由于select需要的是两个而不是单个系统调用，I/O复用还稍有
劣势。不过select的优势在于我们可以等待多个描述符就绪。
6.2.4 信号驱动方式I/O模型
6.2.5 异步I/O模型
6.2.6 各种I/O模型比较
6.2.7 同步I/O模型和异步I/O模型

6.3 select函数
该函数允许进程指示内核等待的多个事件中的任何一个发生，并且在只有一个或多个事件发生或经历了
一段时间后才唤醒它。
我们调用select告知内核对哪些描述符（就读、写、或者异常条件）感兴趣以及等待多长时间。
#include <sys/select.h>
#include <sys/time.h>
int select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset, const struct timeval *timeout);
我们从该函数的最后一个参数timeout开始介绍，它告知内核等待所指定描述符中的任何一个就绪花了多长时间
其timeval结构用于指定这段时间的秒数和微秒数。
struct timeval
{
		long tv_sec;
		long tv_usec;
}
中间的三个参数readset writeset和exceptset指定我们要让内核测试读写和异常条件的描述符
如何给这3个参数中的每一个参数指定一个或者多个描述符值是一个设计上的问题。
select使用描述符集，通常是一个整数数组，其中每个整数中的每一位对应一个描述符。举例来说，假设使用32位整数，那么
该数组中第一个元素对应于描述符0~31，第二个元素对应于描述符32~63，以此类推。所有的这些实现都与应用程序无关，
它们隐藏在名为fd_set数据类型和一下四个宏中：
void FD_ZERO(fd_set *fdset);
void FD_SET(int fd, fd_set *fdset);
void FD_CLR(int fd, fd_set *fdset);
int FD_ISSET(int fd, fd_set *fdset);
我们分配了一个fd_set数据类型的描述符集，并用这些宏设置或测试该集合中的每一位，调用该函数时，我们指定所关心的
描述符的值，该函数返回时，结果将返回哪些描述符就绪。该函数返回后，我们使用FD_ISSET宏来测试fd_set数据类型中的
描述符。描述符集内任何与未就绪描述符对应的返回时均清成0。为此，每次重新调用select函数时，我们都得再次把所有
描述符集内关心的位均设置为1.
该函数的返回值表示跨所有描述符集的已就绪的总位数。如果在任何描述符就绪之前定时器到时，那么返回为0。返回-1表示出错
6.3.1 描述符就绪条件
我们一直在讨论等待一个描述符准备好I/O或是等待其上发生的一个异常处理条件
（1）满足任何下列四个条件的任何一个时，一个套接字准备好了读。
a)该套接字接收缓冲区中的数据字节数大于等于套接字接收缓冲区低水位标记的当前大小。对这样的套接字执行读操作不会阻塞并
将返回一个大于0的值。我们可以使用SO_RCVLOWAT套接字选项设置该套接字的低水位标记。
b)该连接的读半部关闭。对这样的套接字的读操作将不阻塞并返回0.
c)该套接字是一个监听套接字且已完成的连接数不为0
d)其上有一个套接字错误待处理
（2）下列四条件中的任何一个满足时，一个套接字准备好了写。
a)该套接字发送缓冲区中的任何可用空间字节数大于等于套接字发送缓冲区低水位标记的当前的大小，并且或者该套接字已连接，或者该
套接字不需要连接
b)该连接的写半部关闭。
c)使用非阻塞式的connect的套接字建立连接，或者connect以失败告终。
d)其上有一个套接字错误待处理。
6.3.2 select的最大描述符数


